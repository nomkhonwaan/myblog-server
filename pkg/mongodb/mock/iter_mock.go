// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/mongodb/iter.go

// Package mongodb_mock is a generated GoMock package.
package mongodb_mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIter is a mock of Iter interface
type MockIter struct {
	ctrl     *gomock.Controller
	recorder *MockIterMockRecorder
}

// MockIterMockRecorder is the mock recorder for MockIter
type MockIterMockRecorder struct {
	mock *MockIter
}

// NewMockIter creates a new mock instance
func NewMockIter(ctrl *gomock.Controller) *MockIter {
	mock := &MockIter{ctrl: ctrl}
	mock.recorder = &MockIterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIter) EXPECT() *MockIterMockRecorder {
	return m.recorder
}

// Next mocks base method
func (m *MockIter) Next(result interface{}) bool {
	ret := m.ctrl.Call(m, "Next", result)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Next indicates an expected call of Next
func (mr *MockIterMockRecorder) Next(result interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Next", reflect.TypeOf((*MockIter)(nil).Next), result)
}
