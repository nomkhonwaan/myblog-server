// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/mongodb/database.go

// Package mongodb_mock is a generated GoMock package.
package mongodb_mock

import (
	gomock "github.com/golang/mock/gomock"
        mongodb "github.com/nomkhonwaan/myblog-server/pkg/mongodb"
	reflect "reflect"
)

// MockDatabase is a mock of Database interface
type MockDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseMockRecorder
}

// MockDatabaseMockRecorder is the mock recorder for MockDatabase
type MockDatabaseMockRecorder struct {
	mock *MockDatabase
}

// NewMockDatabase creates a new mock instance
func NewMockDatabase(ctrl *gomock.Controller) *MockDatabase {
	mock := &MockDatabase{ctrl: ctrl}
	mock.recorder = &MockDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDatabase) EXPECT() *MockDatabaseMockRecorder {
	return m.recorder
}

// C mocks base method
func (m *MockDatabase) C(name string) mongodb.Collection {
	ret := m.ctrl.Call(m, "C", name)
	ret0, _ := ret[0].(mongodb.Collection)
	return ret0
}

// C indicates an expected call of C
func (mr *MockDatabaseMockRecorder) C(name interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "C", reflect.TypeOf((*MockDatabase)(nil).C), name)
}
