// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/mongodb/collection.go

// Package mongodb_mock is a generated GoMock package.
package mongodb_mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCollection is a mock of Collection interface
type MockCollection struct {
	ctrl     *gomock.Controller
	recorder *MockCollectionMockRecorder
}

// MockCollectionMockRecorder is the mock recorder for MockCollection
type MockCollectionMockRecorder struct {
	mock *MockCollection
}

// NewMockCollection creates a new mock instance
func NewMockCollection(ctrl *gomock.Controller) *MockCollection {
	mock := &MockCollection{ctrl: ctrl}
	mock.recorder = &MockCollectionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCollection) EXPECT() *MockCollectionMockRecorder {
	return m.recorder
}

// Find mocks base method
func (m *MockCollection) Find(query interface{}) Query {
	ret := m.ctrl.Call(m, "Find", query)
	ret0, _ := ret[0].(Query)
	return ret0
}

// Find indicates an expected call of Find
func (mr *MockCollectionMockRecorder) Find(query interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockCollection)(nil).Find), query)
}
